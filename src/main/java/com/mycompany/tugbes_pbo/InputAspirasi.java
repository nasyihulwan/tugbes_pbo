/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.tugbes_pbo;
import com.toedter.calendar.JDateChooser; // PENTING untuk JDateChooser!
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;
import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.StandardCopyOption;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.Date; // Untuk java.util.Date dari JDateChooser
import java.time.LocalDate; // Jika Anda menggunakan LocalDate (untuk konversi tanggal)
import java.time.ZoneId; // Jika Anda menggunakan ZoneId (untuk konversi tanggal)
import javax.swing.JOptionPane;
import com.mycompany.tugbes_pbo.UserSession; // PENTING untuk UserSession
import java.sql.ResultSet;
import java.util.Random;
import javax.swing.JFrame;

/**
 *
 * @author nasyihulwan
 */
public class InputAspirasi extends javax.swing.JFrame {
     private String uploadedFilePath;

    /**
     * Creates new form InputAspirasi
     */
    public InputAspirasi() {
        initComponents();
        getContentPane().setBackground(new java.awt.Color(9,31,64));
        this.setExtendedState(JFrame.MAXIMIZED_BOTH);
        loadKategoriAspirasi();
        // ------------------------------------------------

        // Set lokasi form di tengah layar
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        isiAspirasi = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        judulAspirasi = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        kategoriAspirasi = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        lokasiKejadian = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        lampiran_1 = new javax.swing.JButton();
        kirimAspirasi = new javax.swing.JButton();
        tanggalKejadian = new com.toedter.calendar.JDateChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1920, 1080));
        setSize(new java.awt.Dimension(1920, 1080));

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 0, 37)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Judul Aspirasi");

        jLabel2.setFont(new java.awt.Font("Helvetica Neue", 0, 37)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Isi Aspirasi");

        isiAspirasi.setColumns(20);
        isiAspirasi.setFont(new java.awt.Font("Helvetica Neue", 0, 35)); // NOI18N
        isiAspirasi.setRows(5);
        jScrollPane1.setViewportView(isiAspirasi);

        jLabel3.setFont(new java.awt.Font("Helvetica Neue", 0, 37)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Lokasi Kejadian (Opsional)");

        judulAspirasi.setFont(new java.awt.Font("Helvetica Neue", 0, 35)); // NOI18N
        judulAspirasi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                judulAspirasiActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Helvetica Neue", 0, 37)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Kategori Aspirasi");

        kategoriAspirasi.setFont(new java.awt.Font("Helvetica Neue", 0, 35)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Helvetica Neue", 0, 37)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Tanggal Kejadian (Opsional)");

        lokasiKejadian.setFont(new java.awt.Font("Helvetica Neue", 0, 35)); // NOI18N
        lokasiKejadian.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lokasiKejadianActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Helvetica Neue", 0, 37)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Upload Lampiran (Opsional)");

        lampiran_1.setFont(new java.awt.Font("Helvetica Neue", 0, 25)); // NOI18N
        lampiran_1.setText("Upload File (PDF)");
        lampiran_1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lampiran_1ActionPerformed(evt);
            }
        });

        kirimAspirasi.setFont(new java.awt.Font("Helvetica Neue", 0, 20)); // NOI18N
        kirimAspirasi.setText("Kirim Aspirasi");
        kirimAspirasi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kirimAspirasiActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(373, 373, 373)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(kirimAspirasi, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(judulAspirasi))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(jLabel2)
                            .addGap(18, 18, 18)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 764, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(jLabel6)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(lampiran_1, javax.swing.GroupLayout.PREFERRED_SIZE, 486, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(jLabel4)
                            .addGap(18, 18, 18)
                            .addComponent(kategoriAspirasi, javax.swing.GroupLayout.PREFERRED_SIZE, 662, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(jLabel3)
                            .addGap(18, 18, 18)
                            .addComponent(lokasiKejadian, javax.swing.GroupLayout.PREFERRED_SIZE, 504, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(jLabel5)
                            .addGap(18, 18, 18)
                            .addComponent(tanggalKejadian, javax.swing.GroupLayout.PREFERRED_SIZE, 480, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(352, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(104, 104, 104)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(judulAspirasi, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lokasiKejadian, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tanggalKejadian, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(54, 54, 54)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(kategoriAspirasi, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(lampiran_1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(30, 30, 30)
                .addComponent(kirimAspirasi, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(112, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void judulAspirasiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_judulAspirasiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_judulAspirasiActionPerformed

    private void lokasiKejadianActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lokasiKejadianActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lokasiKejadianActionPerformed

    private void kirimAspirasiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kirimAspirasiActionPerformed
        String judul = judulAspirasi.getText();
        String isi = isiAspirasi.getText();
        String lokasi = lokasiKejadian.getText();
        Date tglKejadianUtil = tanggalKejadian.getDate();
        KategoriAspirasiModel selectedKategori = (KategoriAspirasiModel) kategoriAspirasi.getSelectedItem();
        String namaKategori = selectedKategori.getNamaKategori();
        String idKategori = selectedKategori.getId();
        
        

        if (judul.isEmpty() || isi.isEmpty() || selectedKategori == null) { // Sesuaikan validasi
            JOptionPane.showMessageDialog(this, "Judul, Isi Aspirasi, dan Kategori tidak boleh kosong.", "Validasi Error", JOptionPane.WARNING_MESSAGE);
            return;
        }
        String kategoriId = selectedKategori.getId();

        UserSession session = UserSession.getInstance();
        String nimMahasiswa = session.getNim();

        if (nimMahasiswa == null || nimMahasiswa.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Sesi mahasiswa tidak valid. Silakan login kembali.", "Error Sesi", JOptionPane.ERROR_MESSAGE);
            new DashboardLogin().setVisible(true);
            this.dispose();
            return;
        }

        java.sql.Date tglKejadianSql = null;
        if (tglKejadianUtil != null) {
            tglKejadianSql = new java.sql.Date(tglKejadianUtil.getTime());
        }

        java.sql.Date tglPengaduanSql = new java.sql.Date(System.currentTimeMillis());

        Random random = new Random();
        int idAspirasi = random.nextInt(1000000) + 1; // Range ID 1 - 1,000,000

        String defaultLampiran2 = null;
        String defaultLampiran3 = null;
        java.sql.Date tglDisetujuiSql = new java.sql.Date(System.currentTimeMillis()); 

        String sql = "INSERT INTO aspirasi (" +
                     "id_aspirasi, tgl_aspirasi, tgl_kejadian, nim, judul_aspirasi, isi_laporan, " +
                     "tempat_kejadian, lampiran_1, lampiran_2, lampiran_3, kategori, tgl_disetujui, status, tingkat" +
                     ") VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";

        try (Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/ruangaspira", "root", "");
             PreparedStatement pstmt = conn.prepareStatement(sql)) {

            int paramIndex = 1;

            pstmt.setInt(paramIndex++, idAspirasi);
            pstmt.setDate(paramIndex++, tglPengaduanSql);
            pstmt.setDate(paramIndex++, tglKejadianSql);
            pstmt.setString(paramIndex++, nimMahasiswa);
            pstmt.setString(paramIndex++, judul);
            pstmt.setString(paramIndex++, isi);
            pstmt.setString(paramIndex++, lokasi.isEmpty() ? null : lokasi);
            pstmt.setString(paramIndex++, uploadedFilePath);
            pstmt.setString(paramIndex++, defaultLampiran2);
            pstmt.setString(paramIndex++, defaultLampiran3);
            pstmt.setString(paramIndex++, idKategori);
            pstmt.setDate(paramIndex++, tglDisetujuiSql);
            pstmt.setString(paramIndex++, "0");
            pstmt.setString(paramIndex++, "0");

            int rowsAffected = pstmt.executeUpdate();

            if (rowsAffected > 0) {
                JOptionPane.showMessageDialog(this, "Aspirasi berhasil dikirim!", "Sukses", JOptionPane.INFORMATION_MESSAGE);
                clearForm();
                new DashboardMahasiswa().setVisible(true);
                this.dispose();
            } else {
                JOptionPane.showMessageDialog(this, "Gagal mengirim aspirasi. Coba lagi.", "Error", JOptionPane.ERROR_MESSAGE);
            }

        } catch (SQLException e) {
            e.printStackTrace();
            if (e.getErrorCode() == 1062) {
                JOptionPane.showMessageDialog(this, "Gagal mengirim aspirasi: ID Aspirasi duplikat. Coba lagi.", "Error", JOptionPane.ERROR_MESSAGE);
            } else if (e.getMessage().contains("cannot be null") || e.getMessage().contains("non-null column")) {
                JOptionPane.showMessageDialog(this, "Gagal mengirim aspirasi: Ada kolom yang wajib diisi tapi kosong. Periksa konfigurasi database atau input.", "Database Error (NOT NULL)", JOptionPane.ERROR_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "Database Error: " + e.getMessage() + "\nPastikan XAMPP/MySQL berjalan dan struktur tabel sesuai.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Terjadi kesalahan tak terduga: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_kirimAspirasiActionPerformed

    private void lampiran_1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lampiran_1ActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Pilih File Lampiran");

        // Filter hanya untuk PDF (sesuai teks tombol "PDF")
        FileNameExtensionFilter filter = new FileNameExtensionFilter(
            "Dokumen PDF (*.pdf)", "pdf"
        );
        fileChooser.setFileFilter(filter);

        int userSelection = fileChooser.showOpenDialog(this);

        if (userSelection == JFileChooser.APPROVE_OPTION) {
            File fileToUpload = fileChooser.getSelectedFile();
            
            // Panggil metode untuk menyimpan file ke folder aplikasi
            String savedPath = saveFileToApplicationFolder(fileToUpload);

            if (savedPath != null) {
                uploadedFilePath = savedPath; // Simpan path file yang *disalin*
                JOptionPane.showMessageDialog(this, "File lampiran berhasil dipilih dan disalin.\nPath: " + uploadedFilePath);
            } else {
                uploadedFilePath = null; // Reset jika gagal
                JOptionPane.showMessageDialog(this, "Gagal menyalin file lampiran.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            uploadedFilePath = null; // Reset jika dibatalkan
            JOptionPane.showMessageDialog(this, "Pemilihan file dibatalkan.");
        }
    }//GEN-LAST:event_lampiran_1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InputAspirasi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InputAspirasi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InputAspirasi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InputAspirasi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InputAspirasi().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea isiAspirasi;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField judulAspirasi;
    private javax.swing.JComboBox<com.mycompany.tugbes_pbo.KategoriAspirasiModel> kategoriAspirasi;
    private javax.swing.JButton kirimAspirasi;
    private javax.swing.JButton lampiran_1;
    private javax.swing.JTextField lokasiKejadian;
    private com.toedter.calendar.JDateChooser tanggalKejadian;
    // End of variables declaration//GEN-END:variables

    private void clearForm() {
        // Mengosongkan JTextField dan JTextArea
        judulAspirasi.setText("");
        isiAspirasi.setText("");
        lokasiKejadian.setText("");
        tanggalKejadian.setDate(null); 

        // Mereset path lampiran yang mungkin sudah diunggah
        uploadedFilePath = null; 
    }
    
    private String saveFileToApplicationFolder(File sourceFile) {
        String destinationDirectoryPath = "lampiran_aspirasi"; // Nama folder tujuan
        File destinationDir = new File(destinationDirectoryPath);

        if (!destinationDir.exists()) {
            destinationDir.mkdirs(); // Membuat direktori jika belum ada
        }

        // Buat nama file unik untuk menghindari penimpaan (opsional, tapi disarankan)
        // String fileName = System.currentTimeMillis() + "_" + sourceFile.getName();
        // File destinationFile = new File(destinationDir, fileName);

        // Jika tidak ingin nama unik, langsung pakai nama asli:
        File destinationFile = new File(destinationDir, sourceFile.getName());


        try {
            Files.copy(sourceFile.toPath(), destinationFile.toPath(), StandardCopyOption.REPLACE_EXISTING);
            return destinationFile.getAbsolutePath(); // Mengembalikan path file yang disalin
        } catch (IOException e) {
            e.printStackTrace();
            return null; // Mengembalikan null jika gagal
        }
    }

private void loadKategoriAspirasi() {
    try (Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/ruangaspira", "root", "");
         PreparedStatement pstmt = conn.prepareStatement("SELECT id, nama_kategori FROM aspirasi_kategori");
         ResultSet rs = pstmt.executeQuery()) {

        while (rs.next()) {
            String id = rs.getString("id");
            String nama = rs.getString("nama_kategori");

            KategoriAspirasiModel kategori = new KategoriAspirasiModel(id, nama);
            kategoriAspirasi.addItem(kategori); // <-- bukan .addItem(nama)
        }

    } catch (SQLException e) {
        JOptionPane.showMessageDialog(this, "Gagal memuat kategori: " + e.getMessage());
    }
}

}
